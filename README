About
=====

This goal of this project is to implement an algorithm that detect lane markers.
This project was really influence by the paper of Thittaporn Ganokratanaa [1].

Requirement
===========

You will need opencv with a version >= 2.4.8

Working Build
=============

g++ 4.9.2
opencv 2.4.10
cmake 2.8


How to build this project
=========================

-   cd build/
-   cmake .
-   make

This will generate a binary named "lm"

How to use
==========

Two ways to use this program:

-   First, you can give it an image and it will output an image with lanes traced in red.
-   Second, you can give it a folder of images and it will compute all the x-position of lanes which intercept with the bottom.
The result will be written in a csv.

Examples:

-   ./lm foo.png
-   ./lm folder/ output.csv

Pipeline
========

-   Get Image/Folder
-   Convert Image to Ycbcr colorspace for better edge detection
-   Apply the Sobel operator to detect edges
-   Apply another Canny for edge detection
-   Apply Hough transform to detect lines
-   Apply some filter to detect lane marker
-   Write Image/CSV

References
==========

[1] REAL-TIME LANE DETECTION FOR DRIVING SYSTEM USING IMAGE PROCESSING BASED ON EDGE DETECTION AND HOUGH TRANSFORM
Thittaporn Ganokratanaa

[2] Hough Transform
http://en.wikipedia.org/wiki/Hough_transform

[3] Canny Edge Detector
http://en.wikipedia.org/wiki/Canny_edge_detector

[4] Sobel Operator
http://en.wikipedia.org/wiki/Sobel_operator
